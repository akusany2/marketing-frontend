{"version":3,"sources":["./src/app/Dashboard/dashboard.component.html","./src/app/Dashboard/dashboard-routing.module.ts","./src/app/Dashboard/dashboard.component.css","./src/app/Dashboard/dashboard.component.ts","./src/app/Dashboard/dashboard.module.ts","./src/app/sharedServices/token-interceptor.ts","./src/app/sharedServices/user.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2KAA2K,iCAAiC,0F;;;;;;;;;;;;;;;;;;;;ACAnK;AACc;AACE;AACE;AAE3D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uEAAkB;QAC7B,WAAW,EAAE,CAAC,oEAAS,CAAC;KACzB;CACF,CAAC;AAMF;IAAA;IAAsC,CAAC;IAA1B,sBAAsB;QAJlC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,sBAAsB,CAAI;IAAD,6BAAC;CAAA;AAAJ;;;;;;;;;;;;ACjBnC,+DAA+D,mJ;;;;;;;;;;;;;;;;;;ACAb;AACW;AAO7D;IAEE,4BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,qCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;IACxD,CAAC;;gBAJgC,wEAAW;;IAFjC,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,6JAAyC;;SAE1C,CAAC;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRgB;AAC4B;AAClC;AACc;AACD;AACO;AACJ;AACc;AACV;AACO;AACT;AAgB3D;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAd3B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,EAAE,iFAAsB,EAAE,qEAAgB,EAAE,kEAAY,EAAE,wEAAY,CAAC;YAC7F,YAAY,EAAE,CAAC,wEAAkB,CAAC;YAClC,SAAS,EAAE;gBACT,wEAAW;gBACX,iEAAY;gBACZ;oBACE,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,kFAAgB;oBAC1B,KAAK,EAAE,IAAI;iBACZ;gBACD,oEAAS;aACV;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;ACzBe;AAEW;AAGtD;IACE,0BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnD,oCAAS,GAAT,UACE,OAAyB,EACzB,IAAiB;QAEjB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;YACtB,UAAU,EAAE;gBACV,aAAa,EAAE,YAAU,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAI;aACxD;SACF,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;gBAbiC,iEAAY;;IADnC,gBAAgB;QAD5B,gEAAU,EAAE;OACA,gBAAgB,CAe5B;IAAD,uBAAC;CAAA;AAf4B;;;;;;;;;;;;;;;;;;;;ACNqB;AACP;AACC;AAG5C;IACE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAEpC,CAAC;IACD,oCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAY,GAAG,WAAW,CAAC,CAAC;IACnD,CAAC;;gBALyB,+DAAU;;IADzB,WAAW;QADvB,gEAAU,EAAE;OACA,WAAW,CAOvB;IAAD,kBAAC;CAAA;AAPuB","file":"Dashboard-dashboard-module-es5.js","sourcesContent":["module.exports = \"<nz-layout class=\\\"h-100pt\\\">\\r\\n  <nz-header class=\\\"mb-10\\\">\\r\\n    <app-header></app-header>\\r\\n  </nz-header>\\r\\n  <nz-content>\\r\\n    <h2>Welcome {{(userProfile$ | async).username}}!</h2>\\r\\n  </nz-content>\\r\\n  <!-- <nz-footer>Footer</nz-footer> -->\\r\\n</nz-layout>\\r\\n\"","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AuthGuard } from '../sharedServices/auth.guard';\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: DashboardComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { UserService } from \"../sharedServices/user.service\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.css\"]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  userProfile$;\r\n  constructor(private userService: UserService) {}\r\n\r\n  ngOnInit() {\r\n    this.userProfile$ = this.userService.getUserProfile();\r\n  }\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { HeaderModule } from '../Header/header.module';\r\nimport { LoginService } from '../Login/login.service';\r\nimport { SharedModule } from '../sharedModule/shared.module';\r\nimport { AuthGuard } from '../sharedServices/auth.guard';\r\nimport { TokenInterceptor } from '../sharedServices/token-interceptor';\r\nimport { UserService } from '../sharedServices/user.service';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from \"./dashboard.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, DashboardRoutingModule, HttpClientModule, HeaderModule, SharedModule],\r\n  declarations: [DashboardComponent],\r\n  providers: [\r\n    UserService,\r\n    LoginService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    },\r\n    AuthGuard\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { LoginService } from \"../Login/login.service\";\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(private loginService: LoginService) { }\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.loginService.getToken()}`\r\n      }\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { apiServerUrl } from '../../config';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n  getUserProfile() {\r\n    return this.http.get(apiServerUrl + '/users/me');\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}