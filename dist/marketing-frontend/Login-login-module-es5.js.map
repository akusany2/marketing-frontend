{"version":3,"sources":["./src/app/Login/login.component.html","./src/app/Login/login-routing.module.ts","./src/app/Login/login.component.css","./src/app/Login/login.component.ts","./src/app/Login/login.module.ts","./src/app/sharedServices/status-message.enum.ts"],"names":[],"mappings":"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","file":"Login-login-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"flex-center flex-direction-column w-100pt h-100pt\\\">\\r\\n  <h2>LionCRM!</h2>\\r\\n  <br>\\r\\n\\r\\n  <form nz-form [formGroup]=\\\"loginForm\\\" class=\\\"login-form\\\" (ngSubmit)=\\\"login(loginForm.value)\\\">\\r\\n    <nz-form-item *ngIf=\\\"loginHttpError.status\\\">\\r\\n      <nz-alert nzType=\\\"error\\\" nzMessage=\\\"{{loginHttpError.message}}\\\" nzCloseable nzShowIcon\\r\\n        (nzOnClose)=\\\"closeHttpErrorAlert()\\\">\\r\\n      </nz-alert>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-control nzErrorTip=\\\"Please input your company ID!\\\" nzHasFeedback>\\r\\n        <nz-input-group nzPrefixIcon=\\\"bulb\\\">\\r\\n          <input type=\\\"text\\\" nz-input formControlName=\\\"companyId\\\" placeholder=\\\"Company ID\\\" required />\\r\\n        </nz-input-group>\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-control nzErrorTip=\\\"Please input your username!\\\" nzHasFeedback>\\r\\n        <nz-input-group nzPrefixIcon=\\\"user\\\">\\r\\n          <input type=\\\"text\\\" nz-input formControlName=\\\"username\\\" placeholder=\\\"Username\\\" required />\\r\\n        </nz-input-group>\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-control nzErrorTip=\\\"Please input your Password!\\\" nzHasFeedback>\\r\\n        <nz-input-group nzPrefixIcon=\\\"lock\\\">\\r\\n          <input type=\\\"password\\\" nz-input formControlName=\\\"password\\\" placeholder=\\\"Password\\\" required />\\r\\n        </nz-input-group>\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item class=\\\"flex-center\\\">\\r\\n      <button nz-button class=\\\"login-form-button\\\" [nzType]=\\\"'primary'\\\">Log in</button>\\r\\n    </nz-form-item>\\r\\n    <!-- <nz-form-item>\\r\\n    <nz-form-control>\\r\\n      <label nz-checkbox formControlName=\\\"remember\\\">\\r\\n        <span>Remember me</span>\\r\\n      </label>\\r\\n      <a class=\\\"login-form-forgot\\\" class=\\\"login-form-forgot\\\">Forgot password</a>\\r\\n    </div>\\r\\n      <button nz-button class=\\\"login-form-button\\\" [nzType]=\\\"'primary'\\\">Log in</button>\\r\\n      Or\\r\\n      <a>register now!</a>\\r\\n    </nz-form-control>\\r\\n  </nz-form-item> -->\\r\\n  </form>\"","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { LoginComponent } from \"./login.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { StatusMessageEnum } from \"../sharedServices/status-message.enum\";\r\nimport { UserProfileStore } from \"../User.store\";\r\nimport { UserLoginInterface } from \"./interfaces/login.interface\";\r\nimport { LoginService } from \"./login.service\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loginHttpError = { status: false, message: \"\" };\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router,\r\n    private userProfileStore: UserProfileStore\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loginForm = new FormGroup({\r\n      companyId: new FormControl(\"\", [Validators.required]),\r\n      username: new FormControl(\"\", [Validators.required]),\r\n      password: new FormControl(\"\", [Validators.required])\r\n    });\r\n  }\r\n  login(userData: UserLoginInterface) {\r\n    for (const i in this.loginForm.controls) {\r\n      if (this.loginForm.controls[i].value.length === 0) {\r\n        this.loginForm.controls[i].markAsDirty();\r\n        this.loginForm.controls[i].updateValueAndValidity();\r\n      }\r\n    }\r\n\r\n    this.loginService.loginUser(userData).subscribe(\r\n      data => {\r\n        this.loginService.removeToken();\r\n        if (data[\"message\"] === StatusMessageEnum.invalidCredentials) {\r\n          this.loginHttpError.status = true;\r\n          this.loginHttpError.message = \"Invalid credentials!\";\r\n        } else {\r\n          this.loginService.setToken(data[\"token\"]);\r\n          this.loginService.setUser(JSON.stringify(data[\"user\"]));\r\n          this.userProfileStore.set({ userProfile: data[\"user\"] });\r\n          this.router.navigate([\"/dashboard\"]);\r\n        }\r\n      },\r\n      err => {\r\n        this.loginHttpError.status = true;\r\n        this.loginHttpError.message =\r\n          \"Something went wrong, please contact Admin\";\r\n        return Observable.throw(err);\r\n      }\r\n    );\r\n  }\r\n  closeHttpErrorAlert() {\r\n    this.loginHttpError.status = false;\r\n  }\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { SharedModule } from \"../sharedModule/shared.module\";\r\nimport { AuthGuard } from \"../sharedServices/auth.guard\";\r\nimport { LoginRoutingModule } from \"./login-routing.module\";\r\nimport { LoginComponent } from \"./login.component\";\r\nimport { LoginService } from \"./login.service\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, LoginRoutingModule, SharedModule],\r\n  providers: [LoginService, AuthGuard],\r\n  declarations: [LoginComponent]\r\n})\r\nexport class LoginModule {}\r\n","export enum StatusMessageEnum {\r\n  invalidCredentials = \"invalidCredentials\"\r\n}\r\n"],"sourceRoot":"webpack:///"}