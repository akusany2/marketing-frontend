{"version":3,"sources":["./src/app/Audience/AudienceDetails/audience-details.component.html","./src/app/Audience/audience.component.html","./src/app/SharedComponent/not-found.component.html","./src/app/Audience/AudienceDetails/audience-details.component.scss","./src/app/Audience/AudienceDetails/audience-details.component.ts","./src/app/Audience/AudienceDetails/audience-details.service.ts","./src/app/Audience/audience-routing.module.ts","./src/app/Audience/audience.component.css","./src/app/Audience/audience.component.ts","./src/app/Audience/audience.module.ts","./src/app/Audience/audience.service.ts","./src/app/Campaign/campaign.service.ts","./src/app/Campaign/campaign.store.ts","./src/app/SharedComponent/not-found.component.scss","./src/app/SharedComponent/not-found.component.ts","./src/app/sharedServices/token-interceptor.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8fAA8f,4BAA4B,61G;;;;;;;;;;;ACA1hB,qQAAqQ,mBAAmB,osCAAosC,kBAAkB,2BAA2B,eAAe,2BAA2B,cAAc,q+B;;;;;;;;;;;ACAjkD,wF;;;;;;;;;;;ACAA,+DAA+D,mL;;;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AACX;AAEA;AACP;AAGiB;AAOnE;IAME,iCACU,cAAqC,EACrC,YAA0B,EAC1B,KAAqB,EACrB,MAAc,EACd,aAA4B;QAJ5B,mBAAc,GAAd,cAAc,CAAuB;QACrC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;IACnC,CAAC;IAEJ,0CAAQ,GAAR;QAAA,iBAwBC;QAvBC,8BAA8B;QAC9B,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE;YACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,kBAAkB,GAAG,IAAI,wDAAS,CAAC;YACtC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC9C,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,MAAM,EAAE,IAAI,0DAAW,CAAC,SAAS,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC1D,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;YAC5B,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;gBAChC,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;gBAClE,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,IAAI,CAAC,KAAI,CAAC,kBAAkB,EAAE;oBACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;iBACrC;qBAAM;oBACL,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAI,CAAC,kBAAkB,IAAI,EAAE,CAAC,CAAC;iBACnE;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAoB,GAApB,UAAqB,YAAqC;QACxD,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC;QACtD,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IACnD,CAAC;IAED,oDAAkB,GAAlB,UAAmB,YAAqC;QACtD,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC;QACtD,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;IACjD,CAAC;;gBA1CyB,+EAAqB;gBACvB,iEAAY;gBACnB,8DAAc;gBACb,sDAAM;gBACC,6DAAa;;IAX3B,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,0LAAgD;;SAEjD,CAAC;OACW,uBAAuB,CAkDnC;IAAD,8BAAC;CAAA;AAlDmC;;;;;;;;;;;;;;;;;;;;;;;ACfc;AACP;AACF;AACQ;AACF;AACkB;AAGjE;IACE,+BACU,IAAgB,EAChB,MAAc,EACd,aAA4B,EAC5B,aAA4B,EAC5B,gBAAkC;QAJlC,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAkB;IACzC,CAAC;IACJ,sDAAsB,GAAtB,UAAuB,YAAY;QACjC,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAChC,kBAAQ,IAAI,eAAQ,CAAC,KAAK,KAAK,YAAY,CAAC,KAAK,EAArC,CAAqC,CAClD,CAAC;IACJ,CAAC;IACD,8CAAc,GAAd,UAAe,YAAY;QAA3B,iBAgBC;QAfC,IAAM,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;QAC9D,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,EAAE,0BAA0B,EAAE;gBAChE,UAAU,EAAE,IAAI;aACjB,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oDAAY,GAAG,WAAW,EAAE,YAAY,CAAC,CAAC,SAAS,CAChE,cAAI;gBACF,IAAM,EAAE,GAAQ,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;gBAC5C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACtC,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CACxB,CAAC;SACH;IACH,CAAC;IAED,4CAAY,GAAZ,UAAa,YAAY;QAAzB,iBAeC;QAdC,IAAM,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;QAC9D,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,EAAE,0BAA0B,EAAE;gBAChE,UAAU,EAAE,IAAI;aACjB,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAY,GAAG,WAAW,EAAE,YAAY,CAAC,CAAC,SAAS,CAC/D,cAAI;gBACF,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;gBAC1D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACtC,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CACxB,CAAC;SACH;IACH,CAAC;;gBA5Ce,+DAAU;gBACR,sDAAM;gBACC,6DAAa;gBACb,6DAAa;gBACV,8DAAgB;;IANjC,qBAAqB;QADjC,gEAAU,EAAE;OACA,qBAAqB,CA+CjC;IAAD,4BAAC;CAAA;AA/CiC;;;;;;;;;;;;;;;;;;;;;;ACRO;AACc;AACE;AACA;AAC8B;AAEvF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,oEAAS,CAAC;QAClC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,qEAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,mGAAuB;gBAClC,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;aACxB;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,mGAAuB;aACnC;SACF;KACF;CACF,CAAC;AAMF;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QAJjC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;AC/BlC,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;;;ACAb;AACO;AAEM;AACJ;AACN;AACJ;AAQjD;IACE,2BACU,eAAgC,EAChC,aAA4B,EAC5B,eAAgC,EAChC,aAA4B,EAC5B,MAAc,EACd,KAAqB;QALrB,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAE/B,aAAQ,GAAkB,IAAI,CAAC;QAC/B,cAAS,GAAkB,IAAI,CAAC;QAKhC,4BAAuB,GAAG,KAAK,CAAC;QAChC,mBAAc,GAA+B,EAAE,CAAC;QAChD,oBAAe,GAAG,KAAK,CAAC;QACxB,oBAAe,GAAG,CAAC,CAAC;QACpB,eAAU,GAAG,KAAK,CAAC;QACnB,sBAAiB,GAAG,KAAK,CAAC;IAZvB,CAAC;IAcJ,0CAAc,GAAd,UAAe,EAAE;QACf,IAAI,EAAE,IAAI,IAAI,CAAC,sBAAsB,EAAE;YACrC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;SACzC;IACH,CAAC;IAED,wCAAY,GAAZ,UAAa,EAAE;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,GAAG,EAAE,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,yCAAa,GAAb;QAAA,iBASC;QARC,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,eAAe;gBAClB,IAAI,CAAC,IAAI,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,EAA7B,CAA6B,CAAC;oBAChD,CAAC,KAAI,CAAC,uBAAuB,CAAC;YAChC,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAChC,cAAI,IAAI,YAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,EAA7B,CAA6B,CACtC,CAAC,MAAM,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAQ,GAAR,UAAS,KAAc;QAAvB,iBAKC;QAJC,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,cAAI;YACxC,IAAI,CAAC,OAAO,CAAC,cAAI,IAAI,QAAC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,EAAvC,CAAuC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IACD,iDAAqB,GAArB;QAAA,iBAaC;QAZC,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,eAAe,CAAC,qBAAqB,CACxC,IAAI;iBACD,MAAM,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,EAA7B,CAA6B,CAAC;iBAC7C,GAAG,CAAC,cAAI;gBACP,OAAO;oBACL,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE;iBACjE,CAAC;YACJ,CAAC,CAAC,CACL,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oCAAQ,GAAR;QAAA,iBAqBC;QApBC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QACzD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE;YACrC,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;SACvC;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;YAC5B,IAAI,IAAI,CAAC,MAAM,KAAK,gBAAgB,IAAI,KAAI,CAAC,aAAa,CAAC,SAAS,EAAE,EAAE;gBACtE,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;iBAAM;gBACL,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;YACD,IACE,IAAI,CAAC,MAAM;gBACX,IAAI,CAAC,MAAM,CAAC,IAAI;gBAChB,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,gBAAgB,EACpC;gBACA,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;gBAlF0B,iEAAe;gBACjB,6DAAa;gBACX,0EAAe;gBACjB,sEAAa;gBACpB,sDAAM;gBACP,8DAAc;;IAPpB,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,0JAAwC;;SAEzC,CAAC;OACW,iBAAiB,CAqF7B;IAAD,wBAAC;CAAA;AArF6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdiB;AAC4B;AAClC;AACsB;AACR;AACD;AACqB;AACd;AACJ;AACc;AACL;AACT;AACJ;AACkC;AACJ;AAwBnF;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAtB1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,+EAAqB;gBACrB,qEAAgB;gBAChB,kEAAY;gBACZ,wEAAY;aACb;YACD,YAAY,EAAE,CAAC,sEAAiB,EAAE,oGAAuB,EAAE,sFAAiB,CAAC;YAC7E,SAAS,EAAE;gBACT,iEAAY;gBACZ,kEAAe;gBACf,gGAAqB;gBACrB,0EAAe;gBACf;oBACE,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,mFAAgB;oBAC1B,KAAK,EAAE,IAAI;iBACZ;gBACD,oEAAS;aACV;SACF,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;ACtCuB;AACP;AACjB;AACkB;AACoB;AAIhE;IACE,yBACU,UAAsB,EACtB,aAA4B,EAC5B,aAA4B;QAF5B,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;IACnC,CAAC;IAEJ,wCAAc,GAAd;QAAA,iBAqBC;QApBC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACpC,IAAM,WAAW,GAAG,IAAI,CAAC,UAAU;aAChC,GAAG,CAAsB,oDAAY,GAAG,WAAW,CAAC;aACpD,SAAS,CACR,cAAI;YACF,IAAM,YAAY,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,kBAAQ;gBACnB,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;YACxC,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YACrC,yCAAyC;YACzC,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC,EACD,eAAK;YACH,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACnC,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC,CACF,CAAC;QACJ,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,+CAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;IAC/D,CAAC;IAED,wCAAc,GAAd,UAAe,EAAE;QAAjB,iBAQC;QAPC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,UAAU;aACnB,MAAM,CAAC,oDAAY,GAAG,YAAY,GAAG,EAAE,CAAC;aACxC,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,GAAG,KAAK,EAAE,EAAnB,CAAmB,CAAC,CAAC;YAC3D,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;;gBApCqB,+DAAU;gBACP,6DAAa;gBACb,6DAAa;;IAJ3B,eAAe;QAD3B,gEAAU,EAAE;OACA,eAAe,CAuC3B;IAAD,sBAAC;CAAA;AAvC2B;;;;;;;;;;;;;;;;;;;;;;;;ACRsB;AACP;AACF;AACG;AACU;AACU;AAEA;AAGhE;IACE,yBACmB,UAAsB,EAC/B,aAA4B,EAC5B,aAA4B,EAC5B,aAA4B,EAC5B,aAA4B,EAC5B,YAA0B,EAC1B,MAAc;QANL,eAAU,GAAV,UAAU,CAAY;QAC/B,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;IACrB,CAAC;IAEJ,wCAAc,GAAd;QACE,wEAAwE;IAC1E,CAAC;IACD,kCAAQ,GAAR,UAAS,SAAS;QAChB,IAAI,KAAK,GAAG;YACV,SAAS,EAAE,CAAC;YACZ,IAAI,EAAE,CAAC;YACP,MAAM,EAAE,CAAC;SACV,CAAC;QACF,SAAS,CAAC,OAAO,CAAC,kBAAQ;YACxB,IAAI,QAAQ,CAAC,KAAK,EAAE;gBAClB,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC;oBAC3C,CAAC,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC;oBACrB,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC;gBACpB,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;gBAClE,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;oBACrC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;oBAClB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;aAClB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;IACD,wCAAc,GAAd;QAAA,iBAsBC;QArBC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAsB,oDAAY,GAAG,eAAe,EAAE;YACzD,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,SAAS;SACjD,CAAC;aACD,SAAS,CACR,mBAAS;YACP,IAAM,YAAY,GAAG,EAAE,CAAC;YACxB,SAAS,CAAC,OAAO,CAAC,kBAAQ;gBACxB,QAAQ,CAAC,KAAK,GAAG,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;gBACnD,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;YACxC,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YACrC,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC,EACD,eAAK;YACH,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACnC,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC,CACF,CAAC;IACN,CAAC;IACD,wCAAc,GAAd;QACE,IAAI,CAAC,UAAU;aACZ,GAAG,CAAC,oDAAY,GAAG,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;aAC/D,SAAS,CACR,cAAI,IAAK,CAAC,EACV,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACN,CAAC;IAED,+CAAqB,GAArB,UAAsB,SAAS;QAA/B,iBAmBC;QAlBC,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACpD,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;YAC9B,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,SAAS;YAChD,SAAS,EAAE,SAAS;YACpB,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,YAAY;YACnE,UAAU,EAAE,UAAU;SACvB,CAAC,CAAC;QACH,IAAI,CAAC,UAAU;aACZ,IAAI,CAAC,oDAAY,GAAG,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;aAChE,SAAS,CACR,cAAI;YACF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,CAAC,EACD,aAAG;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACN,CAAC;;gBApF8B,+DAAU;gBAChB,6DAAa;gBACb,6DAAa;gBACb,6DAAa;gBACb,6DAAa;gBACd,iEAAY;gBAClB,sDAAM;;IARb,eAAe;QAD3B,gEAAU,EAAE;OACA,eAAe,CAuF3B;IAAD,sBAAC;CAAA;AAvF2B;;;;;;;;;;;;;;;;;;;;ACVe;AAC0C;AAUrF;IAAmC,uEAGlC;IACC;eACE,iBAAO;IACT,CAAC;IANU,aAAa;QAFzB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;QAClC,mEAAW,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;OACrB,aAAa,CAOzB;IAAD,oBAAC;CAAA,CAPkC,2DAAW,GAO7C;AAPyB;AAU1B;IAAmC,uEAA0B;IAC3D,uBAAsB,KAAoB;QAA1C,YACE,kBAAM,KAAK,CAAC,SACb;QAFqB,WAAK,GAAL,KAAK,CAAe;;IAE1C,CAAC;;gBAF4B,aAAa;;IAD/B,aAAa;QADzB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;OACtB,aAAa,CAIzB;IAAD,oBAAC;CAAA,CAJkC,2DAAW,GAI7C;AAJyB;;;;;;;;;;;;ACrB1B,+DAA+D,+J;;;;;;;;;;;;;;;;;ACAb;AAOlD;IACE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR,cAAmB,CAAC;IAHT,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,mKAAyC;;SAE1C,CAAC;OACW,iBAAiB,CAI7B;IAAD,wBAAC;CAAA;AAJ6B;;;;;;;;;;;;;;;;;;;ACNa;AAEW;AAGtD;IACE,0BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnD,oCAAS,GAAT,UACE,OAAyB,EACzB,IAAiB;QAEjB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;YACtB,UAAU,EAAE;gBACV,aAAa,EAAE,YAAU,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAI;aACxD;SACF,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;gBAbiC,iEAAY;;IADnC,gBAAgB;QAD5B,gEAAU,EAAE;OACA,gBAAgB,CAe5B;IAAD,uBAAC;CAAA;AAf4B","file":"default~Audience-audience-module~Campaign-campaign-module-es5.js","sourcesContent":["module.exports = \"<nz-layout class=\\\"h-100pt\\\">\\r\\n  <nz-header class=\\\"mb-10\\\">\\r\\n    <app-header></app-header>\\r\\n  </nz-header>\\r\\n  <nz-content>\\r\\n\\r\\n    <h2 *ngIf=\\\"!audienceDataEntity\\\" align=\\\"center\\\">Add Audience</h2>\\r\\n    <h2 *ngIf=\\\"audienceDataEntity\\\" align=\\\"center\\\">Edit Audience</h2>\\r\\n    <br>\\r\\n\\r\\n    <form nz-form [formGroup]=\\\"audienceCreateForm\\\" class=\\\"login-form\\\">\\r\\n      <!-- <nz-form-item *ngIf=\\\"audienceValidation\\\">\\r\\n        <nz-alert nzType=\\\"error\\\" nzMessage=\\\"{{audienceValidation.message}}\\\" nzCloseable nzShowIcon\\r\\n          (nzOnClose)=\\\"closeAudienceValidation()\\\">\\r\\n        </nz-alert>\\r\\n      </nz-form-item> -->\\r\\n      <nz-form-item>\\r\\n        <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" [nzXl]=\\\"6\\\" [nzOffset]=\\\"3\\\" nzRequired nzFor=\\\"firstName\\\">First name\\r\\n        </nz-form-label>\\r\\n        <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" [nzXl]=\\\"6\\\" nzErrorTip=\\\"First name required\\\" nzHasFeedback>\\r\\n          <input type=\\\"text\\\" nz-input formControlName=\\\"firstName\\\" placeholder=\\\"First name\\\" required />\\r\\n        </nz-form-control>\\r\\n      </nz-form-item>\\r\\n      <nz-form-item>\\r\\n        <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" [nzXl]=\\\"6\\\" [nzOffset]=\\\"3\\\" nzRequired nzFor=\\\"lastName\\\">Last name\\r\\n        </nz-form-label>\\r\\n        <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" [nzXl]=\\\"6\\\" nzErrorTip=\\\"Last name required\\\" nzHasFeedback>\\r\\n          <input type=\\\"text\\\" nz-input formControlName=\\\"lastName\\\" placeholder=\\\"Last name\\\" required />\\r\\n        </nz-form-control>\\r\\n      </nz-form-item>\\r\\n      <nz-form-item>\\r\\n        <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" [nzXl]=\\\"6\\\" [nzOffset]=\\\"3\\\" nzRequired nzFor=\\\"email\\\">Email</nz-form-label>\\r\\n        <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" [nzXl]=\\\"6\\\" nzErrorTip=\\\"Please input your Email!\\\" nzHasFeedback>\\r\\n          <input type=\\\"email\\\" nz-input formControlName=\\\"email\\\" placeholder=\\\"Email\\\" required />\\r\\n        </nz-form-control>\\r\\n      </nz-form-item>\\r\\n      <nz-form-item>\\r\\n        <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" [nzXl]=\\\"6\\\" [nzOffset]=\\\"3\\\" nzRequired nzFor=\\\"phone\\\">Phone</nz-form-label>\\r\\n        <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" [nzXl]=\\\"6\\\" nzErrorTip=\\\"Please input your Phone!\\\" nzHasFeedback>\\r\\n          <input type=\\\"number\\\" nz-input formControlName=\\\"phone\\\" placeholder=\\\"phone\\\" required />\\r\\n        </nz-form-control>\\r\\n      </nz-form-item>\\r\\n      <nz-form-item>\\r\\n        <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" [nzXl]=\\\"6\\\" [nzOffset]=\\\"3\\\" nzRequired nzFor=\\\"source\\\">Source</nz-form-label>\\r\\n        <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" [nzXl]=\\\"6\\\" nzErrorTip=\\\"Must define the Source!\\\" nzHasFeedback>\\r\\n          <input type=\\\"text\\\" nz-input formControlName=\\\"source\\\" placeholder=\\\"Source\\\" required />\\r\\n        </nz-form-control>\\r\\n      </nz-form-item>\\r\\n      <nz-form-item class=\\\"flex-center\\\">\\r\\n        <button *ngIf=\\\"!audienceDataEntity\\\" (click)=\\\"submitCreateAudience(audienceCreateForm.value)\\\" nz-button\\r\\n          class=\\\"login-form-button\\\" [nzType]=\\\"'primary'\\\">Submit\\r\\n          Audience</button>\\r\\n        <button *ngIf=\\\"audienceDataEntity\\\" (click)=\\\"submitEditAudience(audienceCreateForm.value)\\\" nz-button\\r\\n          class=\\\"login-form-button\\\" [nzType]=\\\"'primary'\\\">Edit Audience</button>\\r\\n      </nz-form-item>\\r\\n      <!-- <nz-form-item>\\r\\n    <nz-form-control>\\r\\n      <label nz-checkbox formControlName=\\\"remember\\\">\\r\\n        <span>Remember me</span>\\r\\n      </label>\\r\\n      <a class=\\\"login-form-forgot\\\" class=\\\"login-form-forgot\\\">Forgot password</a>\\r\\n    </div>\\r\\n      <button nz-button class=\\\"login-form-button\\\" [nzType]=\\\"'primary'\\\">Log in</button>\\r\\n      Or\\r\\n      <a>register now!</a>\\r\\n    </nz-form-control>\\r\\n  </nz-form-item> -->\\r\\n    </form>\\r\\n  </nz-content>\\r\\n  <!-- <nz-footer>Footer</nz-footer> -->\\r\\n</nz-layout>\\r\\n\"","module.exports = \"<nz-layout class=\\\"h-100pt\\\">\\r\\n  <nz-header class=\\\"mb-10\\\">\\r\\n    <app-header></app-header>\\r\\n  </nz-header>\\r\\n  <nz-content>\\r\\n    <div class=\\\"pos-rel\\\">\\r\\n      <h2 *ngIf=\\\"isEditable\\\" class=\\\"pull-left\\\">Select Audience - <span>{{ numberOfChecked }} selected</span></h2>\\r\\n      <button *ngIf=\\\"!isEditable\\\" nz-button nzType=\\\"primary\\\" routerLink=\\\"/audience/create\\\" class=\\\"mb-15 pull-right\\\">\\r\\n        <i nz-icon nzType=\\\"plus\\\"></i>Add audience\\r\\n      </button>\\r\\n      <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"inner-content\\\">\\r\\n\\r\\n      <nz-table #filterTable [nzData]=\\\"listOfDisplayAudience$ | async\\\" [nzLoading]=\\\"isListLoading$ | async\\\"\\r\\n        [nzShowPagination]=\\\"false\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th *ngIf=\\\"isEditable\\\" nzShowCheckbox [(nzChecked)]=\\\"isAllDisplayDataChecked\\\"\\r\\n              (nzCheckedChange)=\\\"checkAll($event)\\\" [nzIndeterminate]=\\\"isIndeterminate\\\"></th>\\r\\n            <th>\\r\\n              Name\\r\\n            </th>\\r\\n            <th>Source</th>\\r\\n            <th>\\r\\n              Email\\r\\n            </th>\\r\\n            <th *ngIf=\\\"!isEditable\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let data of filterTable.data\\\">\\r\\n            <td *ngIf=\\\"isEditable\\\" nzShowCheckbox [(nzChecked)]=\\\"mapOfCheckedId[data._id]\\\"\\r\\n              (nzCheckedChange)=\\\"refreshStatus()\\\"></td>\\r\\n            <td>{{ data.firstName }}</td>\\r\\n            <td>{{ data.source }}</td>\\r\\n            <td>{{ data.email }}</td>\\r\\n            <td *ngIf=\\\"!isEditable\\\">\\r\\n              <a (click)=\\\"editAudience(data._id)\\\">Edit</a>\\r\\n              <nz-divider nzType=\\\"vertical\\\"></nz-divider>\\r\\n              <a (click)=\\\"deleteAudience(data._id)\\\">Delete</a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </nz-table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isEditable\\\" nz-row>\\r\\n      <div nz-col nzSpan=\\\"8\\\">\\r\\n        <br><br>\\r\\n        <button (click)=\\\"addAudienceToCampaign()\\\" [disabled]=\\\"numberOfChecked == 0\\\" nz-button class=\\\"login-form-button\\\"\\r\\n          [nzType]=\\\"'primary'\\\">Save and Start Campaign</button>\\r\\n        <!-- <button (click)=\\\"submitAndSelectAudience(templateEditForm.value)\\\" [disabled]=\\\"!templateEditForm.valid\\\" nz-button\\r\\n          class=\\\"login-form-button\\\" [nzType]=\\\"'primary'\\\">Save Campaign and Select Audience</button> -->\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </nz-content>\\r\\n\\r\\n  <!-- <nz-footer>Footer</nz-footer> -->\\r\\n</nz-layout>\\r\\n\"","module.exports = \"<div>\\r\\n  <h1 style=\\\"text-align: center\\\">Not found!</h1>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0F1ZGllbmNlL0F1ZGllbmNlRGV0YWlscy9hdWRpZW5jZS1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { StateHistoryPlugin } from \"@datorama/akita\";\r\nimport { LoginService } from \"../../Login/login.service\";\r\nimport { AudienceQuery } from \"../audience.store\";\r\nimport { AudienceCreateInterface } from \"../Interfaces/audience-create.interface\";\r\nimport { AudienceInterface } from \"../Interfaces/audience.interface\";\r\nimport { AudienceDetailService } from \"./audience-details.service\";\r\n\r\n@Component({\r\n  selector: \"app-audience-details\",\r\n  templateUrl: \"./audience-details.component.html\",\r\n  styleUrls: [\"./audience-details.component.scss\"]\r\n})\r\nexport class AudienceDetailComponent implements OnInit {\r\n  audienceCreateForm: FormGroup;\r\n  audienceDataEntity: AudienceInterface;\r\n  isEditAudience: boolean;\r\n  stateHistory: StateHistoryPlugin;\r\n\r\n  constructor(\r\n    private createAudience: AudienceDetailService,\r\n    private loginService: LoginService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private audienceQuery: AudienceQuery\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // if audience does not exists\r\n    if (!this.audienceQuery.getHasCache()) {\r\n      this.router.navigate([\"/audience\"]);\r\n    }\r\n\r\n    this.audienceCreateForm = new FormGroup({\r\n      firstName: new FormControl(\"\", [Validators.required]),\r\n      lastName: new FormControl(\"\", [Validators.required]),\r\n      email: new FormControl(\"\", [Validators.email]),\r\n      phone: new FormControl(\"\", [Validators.required]),\r\n      source: new FormControl(\"website\", [Validators.required])\r\n    });\r\n\r\n    this.route.data.subscribe(data => {\r\n      this.route.params.subscribe(params => {\r\n        this.audienceDataEntity = this.audienceQuery.getEntity(params.id);\r\n        if (data.method !== \"add\" && !this.audienceDataEntity) {\r\n          this.router.navigate([\"/audience\"]);\r\n        } else {\r\n          this.audienceCreateForm.patchValue(this.audienceDataEntity || {});\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  submitCreateAudience(audienceData: AudienceCreateInterface) {\r\n    audienceData.userId = this.loginService.getUser()._id;\r\n    this.createAudience.audienceCreate(audienceData);\r\n  }\r\n\r\n  submitEditAudience(audienceData: AudienceCreateInterface) {\r\n    audienceData.userId = this.loginService.getUser()._id;\r\n    audienceData._id = this.audienceDataEntity._id;\r\n    this.createAudience.audienceEdit(audienceData);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NzMessageService } from \"ng-zorro-antd\";\r\nimport { apiServerUrl } from \"../../../config\";\r\nimport { AudienceQuery, AudienceStore } from \"../audience.store\";\r\n\r\n@Injectable()\r\nexport class AudienceDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private audienceStore: AudienceStore,\r\n    private audienceQuery: AudienceQuery,\r\n    private nzMessageService: NzMessageService\r\n  ) {}\r\n  checkDuplicateAudience(audienceData) {\r\n    return this.audienceQuery.getCount(\r\n      audience => audience.email === audienceData.email\r\n    );\r\n  }\r\n  audienceCreate(audienceData) {\r\n    const isDuplicate = this.checkDuplicateAudience(audienceData);\r\n    if (isDuplicate) {\r\n      this.nzMessageService.create(\"error\", \"Audience already exists!\", {\r\n        nzDuration: 5000\r\n      });\r\n    } else {\r\n      this.http.post(apiServerUrl + \"/audience\", audienceData).subscribe(\r\n        data => {\r\n          const id: any = data[\"_id\"];\r\n          this.audienceStore.upsert(id, audienceData);\r\n          this.router.navigate([\"/audience\"]);\r\n        },\r\n        err => console.log(err)\r\n      );\r\n    }\r\n  }\r\n\r\n  audienceEdit(audienceData) {\r\n    const isDuplicate = this.checkDuplicateAudience(audienceData);\r\n    if (isDuplicate) {\r\n      this.nzMessageService.create(\"error\", \"Audience already exists!\", {\r\n        nzDuration: 5000\r\n      });\r\n    } else {\r\n      this.http.put(apiServerUrl + \"/audience\", audienceData).subscribe(\r\n        data => {\r\n          this.audienceStore.update(audienceData._id, audienceData);\r\n          this.router.navigate([\"/audience\"]);\r\n        },\r\n        err => console.log(err)\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AuthGuard } from \"../sharedServices/auth.guard\";\r\nimport { AudienceComponent } from \"./audience.component\";\r\nimport { AudienceDetailComponent } from \"./AudienceDetails/audience-details.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\", canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        component: AudienceComponent\r\n      },\r\n      {\r\n        path: \"create\",\r\n        component: AudienceDetailComponent,\r\n        data: { method: 'add' }\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: AudienceDetailComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AudienceRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0F1ZGllbmNlL2F1ZGllbmNlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { CampaignService } from \"../Campaign/campaign.service\";\r\nimport { CampaignQuery } from \"../Campaign/campaign.store\";\r\nimport { AudienceService } from \"./audience.service\";\r\nimport { AudienceQuery } from \"./audience.store\";\r\nimport { AudienceInterface } from \"./Interfaces/audience.interface\";\r\n\r\n@Component({\r\n  selector: \"app-audience\",\r\n  templateUrl: \"./audience.component.html\",\r\n  styleUrls: [\"./audience.component.css\"]\r\n})\r\nexport class AudienceComponent implements OnInit {\r\n  constructor(\r\n    private audienceService: AudienceService,\r\n    private audienceQuery: AudienceQuery,\r\n    private campaignService: CampaignService,\r\n    private campaignQuery: CampaignQuery,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n  sortName: string | null = null;\r\n  sortValue: string | null = null;\r\n\r\n  listOfDisplayAudience$: Observable<AudienceInterface[]>;\r\n  isListLoading$: Observable<boolean>;\r\n\r\n  isAllDisplayDataChecked = false;\r\n  mapOfCheckedId: { [key: string]: boolean } = {};\r\n  isIndeterminate = false;\r\n  numberOfChecked = 0;\r\n  isEditable = false;\r\n  campaignSelection = false;\r\n\r\n  deleteAudience(id) {\r\n    if (id && this.listOfDisplayAudience$) {\r\n      this.audienceService.deleteAudience(id);\r\n    }\r\n  }\r\n\r\n  editAudience(id) {\r\n    this.router.navigate([\"/audience/edit/\" + id]);\r\n  }\r\n\r\n  refreshStatus(): void {\r\n    this.listOfDisplayAudience$.subscribe(data => {\r\n      this.isIndeterminate =\r\n        data.some(item => this.mapOfCheckedId[item._id]) &&\r\n        !this.isAllDisplayDataChecked;\r\n      this.numberOfChecked = data.filter(\r\n        item => this.mapOfCheckedId[item._id]\r\n      ).length;\r\n    });\r\n  }\r\n\r\n  checkAll(value: boolean): void {\r\n    this.listOfDisplayAudience$.subscribe(data => {\r\n      data.forEach(item => (this.mapOfCheckedId[item._id] = value));\r\n    });\r\n    this.refreshStatus();\r\n  }\r\n  addAudienceToCampaign() {\r\n    this.listOfDisplayAudience$.subscribe(data => {\r\n      this.campaignService.addAudienceToCampaign(\r\n        data\r\n          .filter(item => this.mapOfCheckedId[item._id])\r\n          .map(item => {\r\n            return {\r\n              email: item.email,\r\n              userData: { firstName: item.firstName, lastName: item.lastName }\r\n            };\r\n          })\r\n      );\r\n    });\r\n  }\r\n  ngOnInit(): void {\r\n    this.isListLoading$ = this.audienceQuery.selectLoading();\r\n    this.listOfDisplayAudience$ = this.audienceQuery.selectAll();\r\n    if (!this.audienceQuery.getHasCache()) {\r\n      this.audienceService.getAllAudience();\r\n    }\r\n\r\n    this.route.data.subscribe(data => {\r\n      if (data.method === \"selectAudience\" && this.campaignQuery.hasActive()) {\r\n        this.isEditable = true;\r\n      } else {\r\n        this.router.navigate([\"/audience\"]);\r\n      }\r\n      if (\r\n        data.method &&\r\n        data.method.from &&\r\n        data.method.from == \"templateEditor\"\r\n      ) {\r\n        this.campaignSelection = true;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CampaignService } from \"../Campaign/campaign.service\";\r\nimport { HeaderModule } from \"../Header/header.module\";\r\nimport { LoginService } from \"../Login/login.service\";\r\nimport { NotFoundComponent } from \"../SharedComponent/not-found.component\";\r\nimport { SharedModule } from \"../sharedModule/shared.module\";\r\nimport { AuthGuard } from \"../sharedServices/auth.guard\";\r\nimport { TokenInterceptor } from \"../sharedServices/token-interceptor\";\r\nimport { AudienceRoutingModule } from \"./audience-routing.module\";\r\nimport { AudienceComponent } from \"./audience.component\";\r\nimport { AudienceService } from \"./audience.service\";\r\nimport { AudienceDetailComponent } from \"./AudienceDetails/audience-details.component\";\r\nimport { AudienceDetailService } from \"./AudienceDetails/audience-details.service\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AudienceRoutingModule,\r\n    HttpClientModule,\r\n    HeaderModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [AudienceComponent, AudienceDetailComponent, NotFoundComponent],\r\n  providers: [\r\n    LoginService,\r\n    AudienceService,\r\n    AudienceDetailService,\r\n    CampaignService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    },\r\n    AuthGuard\r\n  ]\r\n})\r\nexport class AudienceModule {}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { of } from \"rxjs\";\r\nimport { apiServerUrl } from \"../../config\";\r\nimport { AudienceQuery, AudienceStore } from \"./audience.store\";\r\nimport { AudienceInterface } from \"./Interfaces/audience.interface\";\r\n\r\n@Injectable()\r\nexport class AudienceService {\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private audienceStore: AudienceStore,\r\n    private audienceQuery: AudienceQuery\r\n  ) {}\r\n\r\n  getAllAudience() {\r\n    this.audienceStore.setLoading(true);\r\n    const allAudience = this.httpClient\r\n      .get<AudienceInterface[]>(apiServerUrl + \"/audience\")\r\n      .subscribe(\r\n        data => {\r\n          const audienceList = {};\r\n          data.forEach(audience => {\r\n            audienceList[audience._id] = audience;\r\n          });\r\n          this.audienceStore.set(audienceList);\r\n          // callback(this.audienceQuery.getAll());\r\n          this.audienceStore.setLoading(false);\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          this.audienceStore.setError(error);\r\n          this.audienceStore.setLoading(false);\r\n        }\r\n      );\r\n    return this.audienceQuery.getHasCache() ? of() : allAudience;\r\n  }\r\n\r\n  deleteAudience(id) {\r\n    this.audienceStore.setLoading(true);\r\n    return this.httpClient\r\n      .delete(apiServerUrl + \"/audience/\" + id)\r\n      .subscribe(data => {\r\n        this.audienceStore.remove(audience => audience._id === id);\r\n        this.audienceStore.setLoading(false);\r\n      });\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { apiServerUrl } from \"../../config\";\r\nimport { LoginService } from \"../Login/login.service\";\r\nimport { CampaignQuery, CampaignStore } from \"./campaign.store\";\r\nimport { CampaignInterface } from \"./interfaces/campaign.interface\";\r\nimport { TemplateQuery, TemplateStore } from \"./template.store\";\r\n\r\n@Injectable()\r\nexport class CampaignService {\r\n  constructor(\r\n    private readonly httpClient: HttpClient,\r\n    private templateQuery: TemplateQuery,\r\n    private templateStore: TemplateStore,\r\n    private campaignStore: CampaignStore,\r\n    private campaignQuery: CampaignQuery,\r\n    private loginService: LoginService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  createCampaign() {\r\n    // this.httpClient.post(apiServerUrl + \"/campaign\", { something: 123 });\r\n  }\r\n  getStats(audiences) {\r\n    let stats = {\r\n      delivered: 0,\r\n      open: 0,\r\n      bounce: 0\r\n    };\r\n    audiences.forEach(audience => {\r\n      if (audience.event) {\r\n        stats.delivered = audience.event[\"delivered\"]\r\n          ? stats.delivered + 1\r\n          : stats.delivered;\r\n        stats.open = audience.event[\"open\"] ? stats.open + 1 : stats.open;\r\n        stats.bounce = audience.event[\"bounce\"]\r\n          ? stats.bounce + 1\r\n          : stats.bounce;\r\n      }\r\n    });\r\n    return stats;\r\n  }\r\n  getAllCampaign() {\r\n    this.campaignStore.setLoading(true);\r\n    return this.httpClient\r\n      .post<CampaignInterface[]>(apiServerUrl + \"/campaign/all\", {\r\n        companyId: this.loginService.getUser().companyId\r\n      })\r\n      .subscribe(\r\n        campaigns => {\r\n          const campaignList = {};\r\n          campaigns.forEach(campaign => {\r\n            campaign.stats = this.getStats(campaign.audiences);\r\n            campaignList[campaign._id] = campaign;\r\n          });\r\n          this.campaignStore.set(campaignList);\r\n          this.campaignStore.setLoading(false);\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          this.campaignStore.setError(error);\r\n          this.campaignStore.setLoading(false);\r\n        }\r\n      );\r\n  }\r\n  updateTemplate() {\r\n    this.httpClient\r\n      .put(apiServerUrl + \"/template\", this.templateQuery.getActive())\r\n      .subscribe(\r\n        data => {},\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  addAudienceToCampaign(audiences) {\r\n    const templateId = this.templateQuery.getActiveId();\r\n    this.campaignStore.updateActive({\r\n      companyId: this.loginService.getUser().companyId,\r\n      audiences: audiences,\r\n      sgTemplateId: this.templateQuery.getEntity(templateId).sgTemplateId,\r\n      templateId: templateId\r\n    });\r\n    this.httpClient\r\n      .post(apiServerUrl + \"/campaign\", this.campaignQuery.getActive())\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate([\"/campaign\"]);\r\n        },\r\n        err => {\r\n          this.router.navigate([\"/campaign\"]);\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { EntityState, EntityStore, QueryEntity, StoreConfig } from \"@datorama/akita\";\r\nimport { CampaignInterface } from \"./interfaces/campaign.interface\";\r\n\r\nexport interface CampaignState extends EntityState<CampaignInterface, number> {\r\n  templateName: string;\r\n  templateHtml: string;\r\n}\r\n\r\n@Injectable({ providedIn: \"root\" })\r\n@StoreConfig({ name: \"campaign\" })\r\nexport class CampaignStore extends EntityStore<\r\nCampaignState,\r\nCampaignInterface\r\n> {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class CampaignQuery extends QueryEntity<CampaignState> {\r\n  constructor(protected store: CampaignStore) {\r\n    super(store);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1NoYXJlZENvbXBvbmVudC9ub3QtZm91bmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { LoginService } from \"../Login/login.service\";\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(private loginService: LoginService) { }\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.loginService.getToken()}`\r\n      }\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}